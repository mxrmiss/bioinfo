# This viminfo file was generated by Vim 8.2.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/opt_

# Last Substitute String:
$

# Command Line History (newest to oldest):
:q
|2,0,1761150758,,"q"
:wq
|2,0,1761062992,,"wq"
:Q
|2,0,1760241700,,"Q"
:Wq
|2,0,1760188610,,"Wq"
:q!
|2,0,1760120012,,"q!"
:version
|2,0,1758541244,,"version"
:!wq
|2,0,1755678054,,"!wq"

# Search String History (newest to oldest):
? @$
|2,1,1760269330,,"@$"
?/opt_
|2,1,1760208479,47,"opt_"
?/fout.write(f"{leaf}\t{sp}\n")
|2,1,1759590638,47,"fout.write(f\"{leaf}\\t{sp}\\n\")"
?/rule all:
|2,1,1759078824,47,"rule all:"
?/iqtree
|2,1,1759077553,47,"iqtree"
?/img
|2,1,1751423265,47,"img"
?/Count
|2,1,1749896000,47,"Count"
?/find:Count
|2,1,1749895950,47,"find:Count"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"0	LINE	0
	  - id: M_yessoensis       
	    type: protein
	    path: data/proteomes/M_yessoensis.protein.faa
|3,0,0,1,3,0,1760269330,"  - id: M_yessoensis       ","    type: protein","    path: data/proteomes/M_yessoensis.protein.faa"
""1	LINE	0
	# 导入所需的库
	from ete3 import Tree
	from ete3.treeview import TreeStyle, NodeStyle, TextFace, AttrFace, faces
	
	def create_phylogenetic_tree(newick_file, output_file):
	    """
	    根据输入的Newick文件生成一个定制样式的进化树图片。
	
	    参数:
	    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。
	    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。
	    """
	    
	    # --- 1. 用户自定义区域 ---
	    # 您需要根据您的数据修改这部分内容
	
	    # 物种与其所属门类的对应关系
	    phylum_map = {
	        'Nematostella_vectensis': 'Cnidaria',
	        'Homo_sapiens': 'Chordata',
	        'Branchiostoma_floridae': 'Chordata',
	        'Nautilus_pompilius': 'Mollusca',
	        'Pomacea_canaliculata': 'Mollusca',
	        'Mytilus_coruscus': 'Mollusca',
	        'Tegillarca_granosa': 'Mollusca',
	        'Grassostrea_ariakensis': 'Mollusca',
	        'Grassostrea_gigas': 'Mollusca',
	        'Patinopecten_yessoensis': 'Mollusca',
	        'Sinonovacula_constricta': 'Mollusca',
	        'Sinonovacula_rivularis': 'Mollusca',
	        'Cyclina_sinensis': 'Mollusca',
	        'Capitella_teleta': 'Annelida',
	        'Drosophila_melanogaster': 'Arthropoda'
	    }
	
	    # 需要加粗显示的物种列表
	    bold_species = [
	        'Sinonovacula_constricta', 
	        'Sinonovacula_rivularis'
	    ]
	
	    # --- 2. 加载树 ---
	    try:
	        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)
	    except Exception as e:
	        print(f"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。")
	        print(f"具体错误: {e}")
	        return
	
	    # 设置一个根节点，以便更好地控制树的渲染
|3,1,1,1,50,0,1760880394,"# 导入所需的库","from ete3 import Tree","from ete3.treeview import TreeStyle, NodeStyle, TextFace, AttrFace, faces","","def create_phylogenetic_tree(newick_file, output_file):","    \"\"\"","    根据输入的Newick文件生成一个定制样式的进化树图片。","","    参数:","    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。",>88
|<"    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。","    \"\"\"","    ","    # --- 1. 用户自定义区域 ---","    # 您需要根据您的数据修改这部分内容","","    # 物种与其所属门类的对应关系","    phylum_map = {","        'Nematostella_vectensis': 'Cnidaria',","        'Homo_sapiens': 'Chordata',","        'Branchiostoma_floridae': 'Chordata',","        'Nautilus_pompilius': 'Mollusca',",>45
|<"        'Pomacea_canaliculata': 'Mollusca',","        'Mytilus_coruscus': 'Mollusca',","        'Tegillarca_granosa': 'Mollusca',","        'Grassostrea_ariakensis': 'Mollusca',","        'Grassostrea_gigas': 'Mollusca',","        'Patinopecten_yessoensis': 'Mollusca',","        'Sinonovacula_constricta': 'Mollusca',","        'Sinonovacula_rivularis': 'Mollusca',","        'Cyclina_sinensis': 'Mollusca',","        'Capitella_teleta': 'Annelida',",>49
|<"        'Drosophila_melanogaster': 'Arthropoda'","    }","","    # 需要加粗显示的物种列表","    bold_species = [","        'Sinonovacula_constricta', ","        'Sinonovacula_rivularis'","    ]","","    # --- 2. 加载树 ---","    try:","        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)","    except Exception as e:","        print(f\"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。\")",>39
|<"        print(f\"具体错误: {e}\")","        return","","    # 设置一个根节点，以便更好地控制树的渲染"
"2	LINE	0
	# 导入所需的库
	from ete3 import Tree
	# 修正后的导入语句：从 ete3.treeview 导入可视化相关的类
	from ete3.treeview import TreeStyle, NodeStyle, TextFace, AttrFace, faces
	
	def create_phylogenetic_tree(newick_file, output_file):
	    """
	    根据输入的Newick文件生成一个定制样式的进化树图片。
	
	    参数:
	    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。
	    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。
	    """
	    
	    # --- 1. 用户自定义区域 ---
	    # 您需要根据您的数据修改这部分内容
	
	    # 物种与其所属门类的对应关系
	    phylum_map = {
	        'Nematostella_vectensis': 'Cnidaria',
	        'Homo_sapiens': 'Chordata',
	        'Branchiostoma_floridae': 'Chordata',
	        'Nautilus_pompilius': 'Mollusca',
	        'Pomacea_canaliculata': 'Mollusca',
	        'Mytilus_coruscus': 'Mollusca',
	        'Tegillarca_granosa': 'Mollusca',
	        'Grassostrea_ariakensis': 'Mollusca',
	        'Grassostrea_gigas': 'Mollusca',
	        'Patinopecten_yessoensis': 'Mollusca',
	        'Sinonovacula_constricta': 'Mollusca',
	        'Sinonovacula_rivularis': 'Mollusca',
	        'Cyclina_sinensis': 'Mollusca',
	        'Capitella_teleta': 'Annelida',
	        'Drosophila_melanogaster': 'Arthropoda'
	    }
	
	    # 需要加粗显示的物种列表
	    bold_species = [
	        'Sinonovacula_constricta', 
	        'Sinonovacula_rivularis'
	    ]
	
	    # --- 2. 加载树 ---
	    try:
	        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)
	    except Exception as e:
	        print(f"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。")
	        print(f"具体错误: {e}")
	        return
	
|3,0,2,1,50,0,1760880232,"# 导入所需的库","from ete3 import Tree","# 修正后的导入语句：从 ete3.treeview 导入可视化相关的类","from ete3.treeview import TreeStyle, NodeStyle, TextFace, AttrFace, faces","","def create_phylogenetic_tree(newick_file, output_file):","    \"\"\"","    根据输入的Newick文件生成一个定制样式的进化树图片。","","    参数:",>83
|<"    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。","    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。","    \"\"\"","    ","    # --- 1. 用户自定义区域 ---","    # 您需要根据您的数据修改这部分内容","","    # 物种与其所属门类的对应关系","    phylum_map = {","        'Nematostella_vectensis': 'Cnidaria',","        'Homo_sapiens': 'Chordata',",>47
|<"        'Branchiostoma_floridae': 'Chordata',","        'Nautilus_pompilius': 'Mollusca',","        'Pomacea_canaliculata': 'Mollusca',","        'Mytilus_coruscus': 'Mollusca',","        'Tegillarca_granosa': 'Mollusca',","        'Grassostrea_ariakensis': 'Mollusca',","        'Grassostrea_gigas': 'Mollusca',","        'Patinopecten_yessoensis': 'Mollusca',","        'Sinonovacula_constricta': 'Mollusca',","        'Sinonovacula_rivularis': 'Mollusca',",>41
|<"        'Cyclina_sinensis': 'Mollusca',","        'Capitella_teleta': 'Annelida',","        'Drosophila_melanogaster': 'Arthropoda'","    }","","    # 需要加粗显示的物种列表","    bold_species = [","        'Sinonovacula_constricta', ","        'Sinonovacula_rivularis'","    ]","","    # --- 2. 加载树 ---","    try:","        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)","    except Exception as e:",>116
|<"        print(f\"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。\")","        print(f\"具体错误: {e}\")","        return",""
"3	LINE	0
	# 导入所需的库
	from ete3 import Tree, TreeStyle, NodeStyle, TextFace, AttrFace, faces
	
	def create_phylogenetic_tree(newick_file, output_file):
	    """
	    根据输入的Newick文件生成一个定制样式的进化树图片。
	
	    参数:
	    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。
	    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。
	    """
	    
	    # --- 1. 用户自定义区域 ---
	    # 您需要根据您的数据修改这部分内容
	
	    # 物种与其所属门类的对应关系
	    phylum_map = {
	        'Nematostella_vectensis': 'Cnidaria',
	        'Homo_sapiens': 'Chordata',
	        'Branchiostoma_floridae': 'Chordata',
	        'Nautilus_pompilius': 'Mollusca',
	        'Pomacea_canaliculata': 'Mollusca',
	        'Mytilus_coruscus': 'Mollusca',
	        'Tegillarca_granosa': 'Mollusca',
	        'Grassostrea_ariakensis': 'Mollusca',
	        'Grassostrea_gigas': 'Mollusca',
	        'Patinopecten_yessoensis': 'Mollusca',
	        'Sinonovacula_constricta': 'Mollusca',
	        'Sinonovacula_rivularis': 'Mollusca',
	        'Cyclina_sinensis': 'Mollusca',
	        'Capitella_teleta': 'Annelida',
	        'Drosophila_melanogaster': 'Arthropoda'
	    }
	
	    # 需要加粗显示的物种列表
	    bold_species = [
	        'Sinonovacula_constricta', 
	        'Sinonovacula_rivularis'
	    ]
	
	    # --- 2. 加载树 ---
	    try:
	        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)
	    except Exception as e:
	        print(f"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。")
	        print(f"具体错误: {e}")
	        return
	
	    # 设置一个根节点，以便更好地控制树的渲染
	    if len(t.get_children()) > 2:
|3,0,3,1,50,0,1760879191,"# 导入所需的库","from ete3 import Tree, TreeStyle, NodeStyle, TextFace, AttrFace, faces","","def create_phylogenetic_tree(newick_file, output_file):","    \"\"\"","    根据输入的Newick文件生成一个定制样式的进化树图片。","","    参数:","    newick_file (str): 输入的树文件路径 (例如 'supermatrix.contree')。","    output_file (str): 输出的图片文件路径 (例如 'phylogenetic_tree.png')。",>12
|<"    \"\"\"","    ","    # --- 1. 用户自定义区域 ---","    # 您需要根据您的数据修改这部分内容","","    # 物种与其所属门类的对应关系","    phylum_map = {","        'Nematostella_vectensis': 'Cnidaria',","        'Homo_sapiens': 'Chordata',","        'Branchiostoma_floridae': 'Chordata',","        'Nautilus_pompilius': 'Mollusca',","        'Pomacea_canaliculata': 'Mollusca',","        'Mytilus_coruscus': 'Mollusca',",>43
|<"        'Tegillarca_granosa': 'Mollusca',","        'Grassostrea_ariakensis': 'Mollusca',","        'Grassostrea_gigas': 'Mollusca',","        'Patinopecten_yessoensis': 'Mollusca',","        'Sinonovacula_constricta': 'Mollusca',","        'Sinonovacula_rivularis': 'Mollusca',","        'Cyclina_sinensis': 'Mollusca',","        'Capitella_teleta': 'Annelida',","        'Drosophila_melanogaster': 'Arthropoda'","    }","","    # 需要加粗显示的物种列表","    bold_species = [",>37
|<"        'Sinonovacula_constricta', ","        'Sinonovacula_rivularis'","    ]","","    # --- 2. 加载树 ---","    try:","        t = Tree(newick_file, format=1) # format=1 用于支持节点值(bootstrap)","    except Exception as e:","        print(f\"错误：无法加载或解析树文件 '{newick_file}'。请检查文件格式是否正确。\")","        print(f\"具体错误: {e}\")","        return","","    # 设置一个根节点，以便更好地控制树的渲染",>35
|<"    if len(t.get_children()) > 2:"
"4	LINE	0
	#!/usr/bin/env Rscript
	# =============================================================================
	# root_and_plot_windows.R —— 顶刊版（不拥挤·对齐美化·可加门类括注）
	# =============================================================================
	
	## ========== 1) 参数（按需改） ==============================================
	lib_dir            <- file.path(Sys.getenv("USERPROFILE"), "Rlibs")
	tree_path          <- "/home/mxrmiss/project/phylo/supermatrix.contree"
	outgroups          <- c("Nematostella_vectensis")       # 可多个外群
	show_branch_length <- TRUE
	bootstrap_cutoff   <- 70                                # 仅显示 ≥ 阈值的自举值
	font_family        <- "Arial"                           # 期刊常见无衬线
	line_size_tree     <- 0.7                               # 树枝线条粗细（刊物安全值）
	dpi                <- 600
	png_width_px_fixed <- 3200                              # 宽度固定；高度自适应
	also_pdf           <- FALSE
	
	# 重点物种（可留空 c()；若需要高亮，bold_targets <- TRUE）
	targets_bold <- c("Sinonovacula_constricta","Sinonovacula_rivularis")
	bold_targets <- TRUE
	
	# 右侧“门类括注”（按您的树 tip.label 填写；不需要可设为空 list()）
	clade_strips <- list(
	  list(taxa1="Nematostella_vectensis",  taxa2="Nematostella_vectensis",  label="Cnidaria"),
	  list(taxa1="Homo_sapiens",            taxa2="Branchiostoma_floridae",  label="Chordata"),
	  list(taxa1="Nautilus_pompilius",      taxa2="Cyclina_sinensis",        label="Mollusca"),
	  list(taxa1="Capitella_teleta",        taxa2="Capitella_teleta",        label="Annelida"),
	  list(taxa1="Drosophila_melanogaster", taxa2="Drosophila_melanogaster", label="Arthropoda")
	)
	
	## ========== 2) 库路径与依赖 ================================================
	if (nzchar(lib_dir)) { dir.create(lib_dir, recursive=TRUE, showWarnings=FALSE); .libPaths(c(lib_dir, .libPaths())) }
	ensure_pkg <- function(pkgs, bioc=FALSE){
	  for(p in pkgs) if(!requireNamespace(p, quietly=TRUE)){
	    message(sprintf("正在安装 %s ...", p))
	    if(bioc){
	      if(!requireNamespace("BiocManager", quietly=TRUE))
	        install.packages("BiocManager", repos="https://cloud.r-project.org", lib=.libPaths()[1])
	      BiocManager::install(p, ask=FALSE, update=FALSE, lib=.libPaths()[1])
	    } else install.packages(p, repos="https://cloud.r-project.org", lib=.libPaths()[1])
	  }
	}
	ensure_pkg(c("ape","ragg","ggplot2"))
	ensure_pkg(c("treeio","tidytree","ggtree","ggfun","yulab.utils","ggplotify"), bioc=TRUE)
	
	suppressPackageStartupMessages({ library(ape); library(ggplot2); library(ggtree); library(ragg) })
	
	## ========== 3) 读树 → 多外群加根 → 梯形化 → Bootstrap 清洗 ================
	stopifnot(file.exists(tree_path))
	tr <- read.tree(tree_path)
|3,0,4,1,50,0,1760873730,"#!/usr/bin/env Rscript","# =============================================================================","# root_and_plot_windows.R —— 顶刊版（不拥挤·对齐美化·可加门类括注）","# =============================================================================","","## ========== 1) 参数（按需改） ==============================================",>73
|<"lib_dir            <- file.path(Sys.getenv(\"USERPROFILE\"), \"Rlibs\")","tree_path          <- \"/home/mxrmiss/project/phylo/supermatrix.contree\"","outgroups          <- c(\"Nematostella_vectensis\")       # 可多个外群","show_branch_length <- TRUE","bootstrap_cutoff   <- 70                                # 仅显示 ≥ 阈值的自举值","font_family        <- \"Arial\"                           # 期刊常见无衬线",>99
|<"line_size_tree     <- 0.7                               # 树枝线条粗细（刊物安全值）","dpi                <- 600","png_width_px_fixed <- 3200                              # 宽度固定；高度自适应","also_pdf           <- FALSE","","# 重点物种（可留空 c()；若需要高亮，bold_targets <- TRUE）","targets_bold <- c(\"Sinonovacula_constricta\",\"Sinonovacula_rivularis\")","bold_targets <- TRUE","",>94
|<"# 右侧“门类括注”（按您的树 tip.label 填写；不需要可设为空 list()）","clade_strips <- list(","  list(taxa1=\"Nematostella_vectensis\",  taxa2=\"Nematostella_vectensis\",  label=\"Cnidaria\"),","  list(taxa1=\"Homo_sapiens\",            taxa2=\"Branchiostoma_floridae\",  label=\"Chordata\"),","  list(taxa1=\"Nautilus_pompilius\",      taxa2=\"Cyclina_sinensis\",        label=\"Mollusca\"),",>99
|<"  list(taxa1=\"Capitella_teleta\",        taxa2=\"Capitella_teleta\",        label=\"Annelida\"),","  list(taxa1=\"Drosophila_melanogaster\", taxa2=\"Drosophila_melanogaster\", label=\"Arthropoda\")",")","","## ========== 2) 库路径与依赖 ================================================","if (nzchar(lib_dir)) { dir.create(lib_dir, recursive=TRUE, showWarnings=FALSE); .libPaths(c(lib_dir, .libPaths())) }","ensure_pkg <- function(pkgs, bioc=FALSE){",>58
|<"  for(p in pkgs) if(!requireNamespace(p, quietly=TRUE)){","    message(sprintf(\"正在安装 %s ...\", p))","    if(bioc){","      if(!requireNamespace(\"BiocManager\", quietly=TRUE))","        install.packages(\"BiocManager\", repos=\"https://cloud.r-project.org\", lib=.libPaths()[1])","      BiocManager::install(p, ask=FALSE, update=FALSE, lib=.libPaths()[1])","    } else install.packages(p, repos=\"https://cloud.r-project.org\", lib=.libPaths()[1])","  }","}",>45
|<"ensure_pkg(c(\"ape\",\"ragg\",\"ggplot2\"))","ensure_pkg(c(\"treeio\",\"tidytree\",\"ggtree\",\"ggfun\",\"yulab.utils\",\"ggplotify\"), bioc=TRUE)","","suppressPackageStartupMessages({ library(ape); library(ggplot2); library(ggtree); library(ragg) })","","## ========== 3) 读树 → 多外群加根 → 梯形化 → Bootstrap 清洗 ================","stopifnot(file.exists(tree_path))","tr <- read.tree(tree_path)"
"5	LINE	0
	#!/usr/bin/env bash
	set -euo pipefail
	
	#############################################
	# F模块运行参数（可按需修改）
	#############################################
	MATRIX_DIR="results/matrix"
	
	# 样本与对比设计
	SAMPLES_TSV="samples.tsv"       # 必含列：sample, group（预留 batch 列但默认不用）
	CONTRASTS_TSV="contrasts.tsv"   # 两列：case, control（如 D1 vs D0）
	
	# 输出目录（皇上口谕：deg 放在 results/deg/）
	OUT_DEG="results/deg"
	OUT_PCA="results/pca"
	LOG_DIR="results/logs"
	
	# 统计阈值与过滤规则
	PADJ_CUTOFF="0.05"
	LFC_CUTOFF="1"
	MIN_COUNT="10"
	TRANSFORM="vst"   # vst 或 rlog
	USE_BATCH="false" # 预留批次开关，默认 false
	
	#############################################
	# 运行前准备
	#############################################
	mkdir -p "${OUT_DEG}" "${OUT_PCA}" "${LOG_DIR}"
	
	# 基础体检
	[[ -f "${SAMPLES_TSV}" ]]   || { echo "[F][致命] 缺少 ${SAMPLES_TSV}" >&2; exit 1; }
	[[ -f "${CONTRASTS_TSV}" ]] || { echo "[F][致命] 缺少 ${CONTRASTS_TSV}" >&2; exit 1; }
	[[ -d "${MATRIX_DIR}" ]]    || { echo "[F][致命] 缺少目录 ${MATRIX_DIR}" >&2; exit 1; }
	
	echo "[F] 探测 ${MATRIX_DIR} 下的候选矩阵文件..."
	ls -lh "${MATRIX_DIR}" || true
	
	# 优先使用 txi RDS（若存在）
	TXI_RDS="$(ls -1 "${MATRIX_DIR}"/txi*lengthScaledTPM*.rds 2>/dev/null | head -n1 || true)"
	
	# 固定三种常见命名，按优先级依次匹配
	CANDIDATES=(
	  "${MATRIX_DIR}/matrix_gene_counts.tsv"
	  "${MATRIX_DIR}/counts.tsv"
	  "${MATRIX_DIR}/gene_counts.tsv"
	)
	
	COUNTS_TSV=""
	for f in "${CANDIDATES[@]}"; do
	  if [[ -f "$f" ]]; then
|3,0,5,1,50,0,1760752511,"#!/usr/bin/env bash","set -euo pipefail","","#############################################","# F模块运行参数（可按需修改）","#############################################","MATRIX_DIR=\"results/matrix\"","","# 样本与对比设计","SAMPLES_TSV=\"samples.tsv\"       # 必含列：sample, group（预留 batch 列但默认不用）","CONTRASTS_TSV=\"contrasts.tsv\"   # 两列：case, control（如 D1 vs D0）","",>60
|<"# 输出目录（皇上口谕：deg 放在 results/deg/）","OUT_DEG=\"results/deg\"","OUT_PCA=\"results/pca\"","LOG_DIR=\"results/logs\"","","# 统计阈值与过滤规则","PADJ_CUTOFF=\"0.05\"","LFC_CUTOFF=\"1\"","MIN_COUNT=\"10\"","TRANSFORM=\"vst\"   # vst 或 rlog","USE_BATCH=\"false\" # 预留批次开关，默认 false","","#############################################","# 运行前准备","#############################################",>55
|<"mkdir -p \"${OUT_DEG}\" \"${OUT_PCA}\" \"${LOG_DIR}\"","","# 基础体检","[[ -f \"${SAMPLES_TSV}\" ]]   || { echo \"[F][致命] 缺少 ${SAMPLES_TSV}\" >&2; exit 1; }","[[ -f \"${CONTRASTS_TSV}\" ]] || { echo \"[F][致命] 缺少 ${CONTRASTS_TSV}\" >&2; exit 1; }","[[ -d \"${MATRIX_DIR}\" ]]    || { echo \"[F][致命] 缺少目录 ${MATRIX_DIR}\" >&2; exit 1; }","","echo \"[F] 探测 ${MATRIX_DIR} 下的候选矩阵文件...\"","ls -lh \"${MATRIX_DIR}\" || true","",>39
|<"# 优先使用 txi RDS（若存在）","TXI_RDS=\"$(ls -1 \"${MATRIX_DIR}\"/txi*lengthScaledTPM*.rds 2>/dev/null | head -n1 || true)\"","","# 固定三种常见命名，按优先级依次匹配","CANDIDATES=(","  \"${MATRIX_DIR}/matrix_gene_counts.tsv\"","  \"${MATRIX_DIR}/counts.tsv\"","  \"${MATRIX_DIR}/gene_counts.tsv\"",")","","COUNTS_TSV=\"\"","for f in \"${CANDIDATES[@]}\"; do","  if [[ -f \"$f\" ]]; then"
"6	LINE	0
	#!/usr/bin/env bash
	set -euo pipefail
	
	# ========= 参数 =========
	GTF="ref/Sinonovacula_constricta_genome.gff3"   # 可为 .gff3 或 .gtf
	QUANT_DIR="results/quant"
	OUT_DIR="results/matrix"
	CFA="no"  # no | scaledTPM | lengthScaledTPM
	
	while [[ $# -gt 0 ]]; do
	  case "$1" in
	    --gtf) GTF="$2"; shift 2;;
	    --quant) QUANT_DIR="$2"; shift 2;;
	    --out) OUT_DIR="$2"; shift 2;;
	    --countsFromAbundance) CFA="$2"; shift 2;;
	    -h|--help)
	      cat <<'EOF'
	用法:
	  bash run_matrix_aggregate.sh \
	    --gtf ref/anno.gff3|gtf \
	    --quant results/quant \
	    --out results/matrix \
	    [--countsFromAbundance no|scaledTPM|lengthScaledTPM]
	EOF
	      exit 0;;
	    *) echo "未知参数: $1"; exit 1;;
	  esac
	done
	
	[[ -f "$GTF" ]] || { echo "❌ 找不到注释：$GTF"; exit 2; }
	[[ -d "$QUANT_DIR" ]] || { echo "❌ 找不到定量目录：$QUANT_DIR"; exit 2; }
	mkdir -p "$OUT_DIR/logs"
	
	# ========= 收集 quant.sf 与“转录本白名单” =========
	QSF_LIST="$OUT_DIR/logs/quant_sf.list"; : > "$QSF_LIST"
	if [[ -f "$QUANT_DIR/quant_list.tsv" ]]; then
	  tail -n +2 "$QUANT_DIR/quant_list.tsv" | awk -F'\t' '{print $2"/quant.sf"}' \
	    | while read -r q; do [[ -f "$q" ]] && echo "$q" >> "$QSF_LIST"; done
	else
	  find "$QUANT_DIR" -mindepth 2 -maxdepth 2 -type f -name quant.sf | sort > "$QSF_LIST"
	fi
	NQ=$(wc -l < "$QSF_LIST" | tr -d ' ')
	[[ $NQ -gt 0 ]] || { echo "❌ 未发现 quant.sf"; exit 2; }
	echo "🔎 发现 quant.sf 数量：$NQ"
	
	TX_USED="$OUT_DIR/logs/transcripts.used.list"; : > "$TX_USED"
	while read -r qsf; do awk 'NR>1{print $1}' "$qsf"; done < "$QSF_LIST" | sort -u > "$TX_USED"
	NTX=$(wc -l < "$TX_USED" | tr -d ' ')
	echo "🧾 quant 中实际转录本种类：$NTX"
	
|3,0,6,1,50,0,1760751785,"#!/usr/bin/env bash","set -euo pipefail","","# ========= 参数 =========","GTF=\"ref/Sinonovacula_constricta_genome.gff3\"   # 可为 .gff3 或 .gtf","QUANT_DIR=\"results/quant\"","OUT_DIR=\"results/matrix\"","CFA=\"no\"  # no | scaledTPM | lengthScaledTPM","","while [[ $# -gt 0 ]]; do","  case \"$1\" in","    --gtf) GTF=\"$2\"; shift 2;;","    --quant) QUANT_DIR=\"$2\"; shift 2;;","    --out) OUT_DIR=\"$2\"; shift 2;;",>50
|<"    --countsFromAbundance) CFA=\"$2\"; shift 2;;","    -h|--help)","      cat <<'EOF'","用法:","  bash run_matrix_aggregate.sh \\","    --gtf ref/anno.gff3|gtf \\","    --quant results/quant \\","    --out results/matrix \\","    [--countsFromAbundance no|scaledTPM|lengthScaledTPM]","EOF","      exit 0;;","    *) echo \"未知参数: $1\"; exit 1;;","  esac","done","","[[ -f \"$GTF\" ]] || { echo \"❌ 找不到注释：$GTF\"; exit 2; }",>89
|<"[[ -d \"$QUANT_DIR\" ]] || { echo \"❌ 找不到定量目录：$QUANT_DIR\"; exit 2; }","mkdir -p \"$OUT_DIR/logs\"","","# ========= 收集 quant.sf 与“转录本白名单” =========","QSF_LIST=\"$OUT_DIR/logs/quant_sf.list\"; : > \"$QSF_LIST\"","if [[ -f \"$QUANT_DIR/quant_list.tsv\" ]]; then","  tail -n +2 \"$QUANT_DIR/quant_list.tsv\" | awk -F'\\t' '{print $2\"/quant.sf\"}' \\","    | while read -r q; do [[ -f \"$q\" ]] && echo \"$q\" >> \"$QSF_LIST\"; done","else",>93
|<"  find \"$QUANT_DIR\" -mindepth 2 -maxdepth 2 -type f -name quant.sf | sort > \"$QSF_LIST\"","fi","NQ=$(wc -l < \"$QSF_LIST\" | tr -d ' ')","[[ $NQ -gt 0 ]] || { echo \"❌ 未发现 quant.sf\"; exit 2; }","echo \"🔎 发现 quant.sf 数量：$NQ\"","","TX_USED=\"$OUT_DIR/logs/transcripts.used.list\"; : > \"$TX_USED\"","while read -r qsf; do awk 'NR>1{print $1}' \"$qsf\"; done < \"$QSF_LIST\" | sort -u > \"$TX_USED\"","NTX=$(wc -l < \"$TX_USED\" | tr -d ' ')",>53
|<"echo \"🧾 quant 中实际转录本种类：$NTX\"",""
"7	LINE	0
	#!/usr/bin/env bash
	# =============================================================================
	# 模块 C 扩展工具：构建 Salmon 可识别的 geneMap 文件
	# 生成两列（transcript_id   gene_id）
	#
	# 功能：
	#   自动判断 GFF3 / GTF 格式，从注释文件中提取转录本与基因对应关系。
	#   结果文件将保存为 ref/tx2gene.geneMap.tsv
	#
	# 使用方法：
	#   bash build_geneMap.sh ref/Sinonovacula_constricta_genome.gff3
	#
	# 生成：
	#   ref/tx2gene.geneMap.tsv
	#
	# 兼容：
	#   - EVM, NCBI, Ensembl 格式注释
	#   - 支持 mRNA、transcript、gene 特征
	# =============================================================================
	set -euo pipefail
	
	# 输入参数检查
	if [[ $# -lt 1 ]]; then
	  echo "用法: bash $0 <annotation.gff3|annotation.gtf>"
	  exit 1
	fi
	
	ANNOT=$1
	OUT="ref/tx2gene.geneMap.tsv"
	
	mkdir -p ref
	
	echo "🔍 检测注释文件格式..."
	# 判断是 GFF3 还是 GTF
	FORMAT="gff3"
	if grep -q "transcript_id" "$ANNOT"; then
	  FORMAT="gtf"
	fi
	echo "🧠 格式识别结果：$FORMAT"
	
	TMP=$(mktemp)
	
	# ------------------------- 解析逻辑 -------------------------
	if [[ "$FORMAT" == "gff3" ]]; then
	  echo "🧩 从 GFF3 提取 ID / Parent..."
	  # 提取 mRNA 或 transcript 层级
	  awk -F'\t' '
	    $3=="mRNA" || $3=="transcript" {
	      match($9,/ID=([^;]+)/,a);
	      match($9,/Parent=([^;]+)/,b);
|3,0,7,1,50,0,1760750822,"#!/usr/bin/env bash","# =============================================================================","# 模块 C 扩展工具：构建 Salmon 可识别的 geneMap 文件","# 生成两列（transcript_id   gene_id）","#","# 功能：","#   自动判断 GFF3 / GTF 格式，从注释文件中提取转录本与基因对应关系。","#   结果文件将保存为 ref/tx2gene.geneMap.tsv","#","# 使用方法：",>67
|<"#   bash build_geneMap.sh ref/Sinonovacula_constricta_genome.gff3","#","# 生成：","#   ref/tx2gene.geneMap.tsv","#","# 兼容：","#   - EVM, NCBI, Ensembl 格式注释","#   - 支持 mRNA、transcript、gene 特征","# =============================================================================","set -euo pipefail","","# 输入参数检查","if [[ $# -lt 1 ]]; then","  echo \"用法: bash $0 <annotation.gff3|annotation.gtf>\"","  exit 1","fi","","ANNOT=$1",>33
|<"OUT=\"ref/tx2gene.geneMap.tsv\"","","mkdir -p ref","","echo \"🔍 检测注释文件格式...\"","# 判断是 GFF3 还是 GTF","FORMAT=\"gff3\"","if grep -q \"transcript_id\" \"$ANNOT\"; then","  FORMAT=\"gtf\"","fi","echo \"🧠 格式识别结果：$FORMAT\"","","TMP=$(mktemp)","","# ------------------------- 解析逻辑 -------------------------","if [[ \"$FORMAT\" == \"gff3\" ]]; then","  echo \"🧩 从 GFF3 提取 ID / Parent...\"","  # 提取 mRNA 或 transcript 层级",>17
|<"  awk -F'\\t' '","    $3==\"mRNA\" || $3==\"transcript\" {","      match($9,/ID=([^;]+)/,a);","      match($9,/Parent=([^;]+)/,b);"
"8	LINE	0
	#!/usr/bin/env bash
	# =============================================================================
	# build_refprep.sh —— 参考准备（可选仅 EVM）+ Salmon decoy-aware 索引
	# 作者：小茹（为皇上定制）
	#
	# 功能概述：
	#   1) （可选）过滤注释：当 EVM_ONLY=true 时，仅保留 EVM 体系条目
	#   2) 用 gffread 从 GTF/GFF3 + 基因组提取转录本序列 transcripts.fa
	#   3) 生成 decoys.txt（来自基因组序列头）
	#   4) 生成 gentrome.fa = transcripts.fa + genome.fa
	#   5) 构建 decoy-aware Salmon 索引：results/refprep/salmon_index
	#
	# 依赖：
	#   gffread（Bioconda: mamba install -c bioconda gffread）
	#   salmon  （Bioconda: mamba install -c bioconda salmon）
	# =============================================================================
	set -euo pipefail
	
	# ----------------------------- 脚本内参数（皇上在此处修改） -----------------------------
	GTF="ref/Sinonovacula_constricta_genome.gff3"   # 可为 .gtf 或 .gff3
	FA="ref/Sinonovacula_constricta_genome.fa"      # 基因组
	OUT="results/refprep"                           # 输出目录
	THREADS=10
	EVM_ONLY=false                                  # 是否启用“仅 EVM”严格模式（true/false）
	
	# ----------------------------- 依赖检查 -----------------------------
	command -v gffread >/dev/null || { echo "❌ 缺少 gffread"; exit 1; }
	command -v salmon  >/dev/null || { echo "❌ 缺少 salmon";  exit 1; }
	
	[[ -f "$GTF" ]] || { echo "❌ 找不到 GTF/GFF3: $GTF"; exit 1; }
	[[ -f "$FA"  ]] || { echo "❌ 找不到基因组: $FA";   exit 1; }
	
	# ----------------------------- 目录与路径 -----------------------------
	mkdir -p "$OUT"
	TMP="$OUT/_tmp_v3"; mkdir -p "$TMP"
	
	EVM_GTF="$OUT/annotation.evm_only.gtf"   # 当 EVM_ONLY=true 时生成
	USE_GTF="$GTF"                           # 实际用于 gffread 的注释路径（默认原始 GTF/GFF3）
	TRANSCRIPTS="$OUT/transcripts.fa"
	DECOYS="$OUT/decoys.txt"
	GENTROME="$OUT/gentrome.fa"
	INDEX_DIR="$OUT/salmon_index"
	
	# ----------------------------- 可选：EVM 严格过滤 -----------------------------
	if $EVM_ONLY; then
	  echo "🧽 启用严格模式：仅保留 EVM 体系（EVM_ONLY=true）..."
	  # 说明：
	  #  - 同时兼容 GTF 与 GFF3 的属性字段；
	  #  - 原逻辑只匹配 evm* 容易漏掉皇上的 Sco… ID。
	  #  - 【最小改动】在不删原判定的前提下，新增两条“并集条件”：
|3,0,8,1,50,0,1760720723,"#!/usr/bin/env bash","# =============================================================================","# build_refprep.sh —— 参考准备（可选仅 EVM）+ Salmon decoy-aware 索引","# 作者：小茹（为皇上定制）","#","# 功能概述：","#   1) （可选）过滤注释：当 EVM_ONLY=true 时，仅保留 EVM 体系条目","#   2) 用 gffread 从 GTF/GFF3 + 基因组提取转录本序列 transcripts.fa",>56
|<"#   3) 生成 decoys.txt（来自基因组序列头）","#   4) 生成 gentrome.fa = transcripts.fa + genome.fa","#   5) 构建 decoy-aware Salmon 索引：results/refprep/salmon_index","#","# 依赖：","#   gffread（Bioconda: mamba install -c bioconda gffread）","#   salmon  （Bioconda: mamba install -c bioconda salmon）","# =============================================================================","set -euo pipefail","",>106
|<"# ----------------------------- 脚本内参数（皇上在此处修改） -----------------------------","GTF=\"ref/Sinonovacula_constricta_genome.gff3\"   # 可为 .gtf 或 .gff3","FA=\"ref/Sinonovacula_constricta_genome.fa\"      # 基因组","OUT=\"results/refprep\"                           # 输出目录","THREADS=10","EVM_ONLY=false                                  # 是否启用“仅 EVM”严格模式（true/false）","",>76
|<"# ----------------------------- 依赖检查 -----------------------------","command -v gffread >/dev/null || { echo \"❌ 缺少 gffread\"; exit 1; }","command -v salmon  >/dev/null || { echo \"❌ 缺少 salmon\";  exit 1; }","","[[ -f \"$GTF\" ]] || { echo \"❌ 找不到 GTF/GFF3: $GTF\"; exit 1; }","[[ -f \"$FA\"  ]] || { echo \"❌ 找不到基因组: $FA\";   exit 1; }","","# ----------------------------- 目录与路径 -----------------------------","mkdir -p \"$OUT\"",>41
|<"TMP=\"$OUT/_tmp_v3\"; mkdir -p \"$TMP\"","","EVM_GTF=\"$OUT/annotation.evm_only.gtf\"   # 当 EVM_ONLY=true 时生成","USE_GTF=\"$GTF\"                           # 实际用于 gffread 的注释路径（默认原始 GTF/GFF3）","TRANSCRIPTS=\"$OUT/transcripts.fa\"","DECOYS=\"$OUT/decoys.txt\"","GENTROME=\"$OUT/gentrome.fa\"","INDEX_DIR=\"$OUT/salmon_index\"","","# ----------------------------- 可选：EVM 严格过滤 -----------------------------","if $EVM_ONLY; then",>81
|<"  echo \"🧽 启用严格模式：仅保留 EVM 体系（EVM_ONLY=true）...\"","  # 说明：","  #  - 同时兼容 GTF 与 GFF3 的属性字段；","  #  - 原逻辑只匹配 evm* 容易漏掉皇上的 Sco… ID。","  #  - 【最小改动】在不删原判定的前提下，新增两条“并集条件”："
"9	LINE	0
	#!/usr/bin/env bash
	# =============================================================================
	# build_refprep.sh —— 默认不过滤；按脚本内开关启用“仅 EVM”并构建 Salmon 索引
	# 作者：小茹（为皇上定制）
	#
	# 功能概述：
	#   1) （可选）过滤注释：默认不过滤；当脚本内开关 EVM_ONLY=true 时，仅保留 EVM 体系条目
	#   2) 用 gffread 从 GTF/GFF3 + 基因组提取转录本序列 transcripts.fa
	#   3) 生成 decoys.txt（来自基因组序列头）
	#   4) 生成 gentrome.fa = transcripts.fa + genome.fa
	#   5) 构建 decoy-aware Salmon 索引：results/refprep/salmon_index
	#
	# 依赖：
	#   gffread（Bioconda: mamba install -c bioconda gffread）
	#   salmon  （Bioconda: mamba install -c bioconda salmon）
	# =============================================================================
	set -euo pipefail
	
	# ----------------------------- 脚本内参数（皇上在此处修改） -----------------------------
	GTF="ref/Sinonovacula_constricta_genome.gff3"   # 可为 .gtf 或 .gff3
	FA="ref/Sinonovacula_constricta_genome.fa"      # 基因组
	OUT="results/refprep"                           # 输出目录
	THREADS=10
	EVM_ONLY=false                                  # 是否启用“仅 EVM”严格模式（true/false）
	
	# ----------------------------- 依赖检查 -----------------------------
	command -v gffread >/dev/null || { echo "❌ 缺少 gffread"; exit 1; }
	command -v salmon  >/dev/null || { echo "❌ 缺少 salmon";  exit 1; }
	
	[[ -f "$GTF" ]] || { echo "❌ 找不到 GTF/GFF3: $GTF"; exit 1; }
	[[ -f "$FA"  ]] || { echo "❌ 找不到基因组: $FA";   exit 1; }
	
	# ----------------------------- 目录与路径 -----------------------------
	mkdir -p "$OUT"
	TMP="$OUT/_tmp_v3"; mkdir -p "$TMP"
	
	EVM_GTF="$OUT/annotation.evm_only.gtf"   # 当 EVM_ONLY=true 时生成
	USE_GTF="$GTF"                           # 实际用于 gffread 的注释路径（默认原始 GTF/GFF3）
	TRANSCRIPTS="$OUT/transcripts.fa"
	DECOYS="$OUT/decoys.txt"
	GENTROME="$OUT/gentrome.fa"
	INDEX_DIR="$OUT/salmon_index"
	
	# ----------------------------- 可选：EVM 严格过滤 -----------------------------
	if $EVM_ONLY; then
	  echo "🧽 启用严格模式：仅保留 EVM 体系（EVM_ONLY=true）..."
	  # 说明：
	  #  - 同时兼容 GTF 与 GFF3 的属性字段；
	  #  - 原逻辑只匹配 evm*，会漏掉皇上的 Sco… ID。
	  #  - 【最小改动】在不删原判定的前提下，新增两条“并集条件”：
|3,0,9,1,50,0,1760720704,"#!/usr/bin/env bash","# =============================================================================","# build_refprep.sh —— 默认不过滤；按脚本内开关启用“仅 EVM”并构建 Salmon 索引","# 作者：小茹（为皇上定制）","#","# 功能概述：","#   1) （可选）过滤注释：默认不过滤；当脚本内开关 EVM_ONLY=true 时，仅保留 EVM 体系条目",>81
|<"#   2) 用 gffread 从 GTF/GFF3 + 基因组提取转录本序列 transcripts.fa","#   3) 生成 decoys.txt（来自基因组序列头）","#   4) 生成 gentrome.fa = transcripts.fa + genome.fa","#   5) 构建 decoy-aware Salmon 索引：results/refprep/salmon_index","#","# 依赖：","#   gffread（Bioconda: mamba install -c bioconda gffread）","#   salmon  （Bioconda: mamba install -c bioconda salmon）",>81
|<"# =============================================================================","set -euo pipefail","","# ----------------------------- 脚本内参数（皇上在此处修改） -----------------------------","GTF=\"ref/Sinonovacula_constricta_genome.gff3\"   # 可为 .gtf 或 .gff3","FA=\"ref/Sinonovacula_constricta_genome.fa\"      # 基因组","OUT=\"results/refprep\"                           # 输出目录","THREADS=10",>105
|<"EVM_ONLY=false                                  # 是否启用“仅 EVM”严格模式（true/false）","","# ----------------------------- 依赖检查 -----------------------------","command -v gffread >/dev/null || { echo \"❌ 缺少 gffread\"; exit 1; }","command -v salmon  >/dev/null || { echo \"❌ 缺少 salmon\";  exit 1; }","","[[ -f \"$GTF\" ]] || { echo \"❌ 找不到 GTF/GFF3: $GTF\"; exit 1; }","[[ -f \"$FA\"  ]] || { echo \"❌ 找不到基因组: $FA\";   exit 1; }",>2
|<"","# ----------------------------- 目录与路径 -----------------------------","mkdir -p \"$OUT\"","TMP=\"$OUT/_tmp_v3\"; mkdir -p \"$TMP\"","","EVM_GTF=\"$OUT/annotation.evm_only.gtf\"   # 当 EVM_ONLY=true 时生成","USE_GTF=\"$GTF\"                           # 实际用于 gffread 的注释路径（默认原始 GTF/GFF3）","TRANSCRIPTS=\"$OUT/transcripts.fa\"","DECOYS=\"$OUT/decoys.txt\"","GENTROME=\"$OUT/gentrome.fa\"","INDEX_DIR=\"$OUT/salmon_index\"","",>89
|<"# ----------------------------- 可选：EVM 严格过滤 -----------------------------","if $EVM_ONLY; then","  echo \"🧽 启用严格模式：仅保留 EVM 体系（EVM_ONLY=true）...\"","  # 说明：","  #  - 同时兼容 GTF 与 GFF3 的属性字段；","  #  - 原逻辑只匹配 evm*，会漏掉皇上的 Sco… ID。","  #  - 【最小改动】在不删原判定的前提下，新增两条“并集条件”："
"-	CHAR	0
	x <- sub(paste0("^", pe), "", x)
|3,0,36,0,1,0,1760449057,"x <- sub(paste0(\"^\", pe), \"\", x)"

# File marks:
'0  48  0  ~/.viminfo
|4,48,48,0,1761150758,"~/.viminfo"
'1  22  0  ~/winshare.nmconnection
|4,49,22,0,1761062992,"~/winshare.nmconnection"
'2  239  1  ~/project/phylo/iqtree_pubtree.R
|4,50,239,1,1760896258,"~/project/phylo/iqtree_pubtree.R"
'3  51  86  ~/project/phylo/dtree.R
|4,51,51,86,1760890992,"~/project/phylo/dtree.R"
'4  105  0  ~/project/phylo/iqtree_pubtree.R
|4,52,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
'5  105  0  ~/project/phylo/iqtree_pubtree.R
|4,53,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
'6  108  63  ~/project/phylo/create_tree.py
|4,54,108,63,1760880398,"~/project/phylo/create_tree.py"
'7  1  63  ~/project/phylo/create_tree.py
|4,55,1,63,1760880236,"~/project/phylo/create_tree.py"
'8  110  63  ~/project/phylo/create_tree.py
|4,56,110,63,1760880236,"~/project/phylo/create_tree.py"
'9  1  63  ~/project/phylo/create_tree.py
|4,57,1,63,1760879194,"~/project/phylo/create_tree.py"

# Jumplist (newest first):
-'  48  0  ~/.viminfo
|4,39,48,0,1761150758,"~/.viminfo"
-'  22  0  ~/winshare.nmconnection
|4,39,22,0,1761062992,"~/winshare.nmconnection"
-'  22  0  ~/winshare.nmconnection
|4,39,22,0,1761062992,"~/winshare.nmconnection"
-'  1  0  ~/winshare.nmconnection
|4,39,1,0,1761062979,"~/winshare.nmconnection"
-'  1  0  ~/winshare.nmconnection
|4,39,1,0,1761062979,"~/winshare.nmconnection"
-'  239  1  ~/project/phylo/iqtree_pubtree.R
|4,39,239,1,1760896258,"~/project/phylo/iqtree_pubtree.R"
-'  239  1  ~/project/phylo/iqtree_pubtree.R
|4,39,239,1,1760896258,"~/project/phylo/iqtree_pubtree.R"
-'  239  1  ~/project/phylo/iqtree_pubtree.R
|4,39,239,1,1760896258,"~/project/phylo/iqtree_pubtree.R"
-'  239  1  ~/project/phylo/iqtree_pubtree.R
|4,39,239,1,1760896258,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760896245,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760896245,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760896245,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760896245,"~/project/phylo/iqtree_pubtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  51  86  ~/project/phylo/dtree.R
|4,39,51,86,1760890992,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  1  0  ~/project/phylo/dtree.R
|4,39,1,0,1760890984,"~/project/phylo/dtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  105  0  ~/project/phylo/iqtree_pubtree.R
|4,39,105,0,1760883688,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  1  0  ~/project/phylo/iqtree_pubtree.R
|4,39,1,0,1760883682,"~/project/phylo/iqtree_pubtree.R"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  108  63  ~/project/phylo/create_tree.py
|4,39,108,63,1760880398,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"
-'  1  63  ~/project/phylo/create_tree.py
|4,39,1,63,1760880392,"~/project/phylo/create_tree.py"

# History of marks within files (newest to oldest):

> ~/.viminfo
	*	1761150749	0
	"	48	0

> ~/winshare.nmconnection
	*	1761062990	0
	"	22	0
	^	22	0
	.	21	7
	+	21	7

> ~/project/phylo/iqtree_pubtree.R
	*	1760896256	0
	"	239	1
	^	239	2
	.	239	1
	+	104	58
	+	239	1

> ~/project/phylo/dtree.R
	*	1760890990	0
	"	51	86
	^	51	87
	.	51	86
	+	51	86

> ~/project/phylo/create_tree.py
	*	1760880396	0
	"	108	63
	^	108	64
	.	108	63
	+	1	20
	+	108	63

> ~/project/phylo/tree_img.R
	*	1760874984	0
	"	191	0
	^	191	0
	.	190	99
	+	1	22
	+	190	99

> ~/project/rna-seq/results/logs/f_module_session.txt
	*	1760786601	0
	"	1	0

> ~/project/rna-seq/run_deg_module.sh
	*	1760752531	0
	"	6	0
	^	6	0
	.	94	41
	+	1	19
	+	94	41

> ~/project/rna-seq/run_matrix_aggregate.sh
	*	1760751790	0
	"	170	0
	^	170	0
	.	169	30
	+	1	19
	+	169	30

> ~/project/rna-seq/build_geneMap.sh
	*	1760750827	0
	"	67	0
	^	67	0
	.	66	2
	+	1	35
	+	1	19
	+	66	2

> ~/project/rna-seq/build_refprep.sh
	*	1760720728	0
	"	162	0
	^	162	0
	.	161	149
	+	1	19
	+	1	149
	+	1	19
	+	1	149
	+	1	19
	+	161	149

> ~/.bashrc
	*	1760715586	0
	"	126	25
	.	124	0
	+	120	26
	+	121	29
	+	118	30
	+	119	30
	+	120	25
	+	121	29
	+	122	27
	+	123	50
	+	124	28
	+	124	29
	+	124	0

> ~/project/rna-seq/diagnose_go_axis.R
	*	1760550470	0
	"	222	0
	^	222	0
	.	221	1
	+	1	87
	+	1	22
	+	221	1

> ~/project/rna-seq/diagnose_go_labels.R
	*	1760546874	0
	"	162	0
	^	162	0
	.	161	127
	+	1	22
	+	161	127

> ~/project/rna-seq/diag_enrich_coverage.R
	*	1760526440	0
	"	183	0
	^	183	0
	.	182	65
	+	182	65

> ~/project/rna-seq/results/deg/_summary/g_module_session.log
	*	1760460922	0
	"	44	53
	.	1	0
	+	1	0

> ~/project/rna-seq/results/deg/_summary/g_module_session
	*	1760458798	0
	"	1	0

> ~/project/rna-seq/results/deg/_summary/g_module_session.
	*	1760458793	0
	"	1	0

> ~/project/rna-seq/run_enrich_module.sh
	*	1760449696	0
	"	169	0
	^	169	0
	.	168	2
	+	1	80
	+	1	22
	+	1	19
	+	1	80
	+	1	0
	+	1	13
	+	1	19
	+	168	2

> ~/project/rna-seq/g_enrich.R
	*	1760449217	0
	"	209	0
	^	209	0
	.	208	28
	+	1	22
	+	1	28
	+	1	67
	+	1	22
	+	1	28
	+	1	22
	+	208	28

> ~/project/rna-seq/ref/build_kegg_pathway_maps_local.sh
	*	1760448867	0
	"	94	0
	^	94	0
	.	93	41
	+	93	41

> ~/project/rna-seq/extract_go_kegg_from_files.py
	*	1760274196	0
	"	203	0
	^	203	0
	.	202	10
	+	202	10

> ~/project/rna-seq/extract_go_kegg.py
	*	1760271075	0
	"	327	0
	^	327	0
	.	326	10
	+	1	22
	+	326	10

> ~/project/rna-seq/temp/attach_names_from_sources.py
	*	1760269484	0
	"	1	0
	^	200	0
	.	199	10
	+	199	10

> ~/project/rna-seq/temp/extract_from_func_merg.py
	*	1760269309	0
	"	189	48
	^	232	0
	.	231	10
	+	231	10

> ~/project/rna-seq/prep_go_kegg_names.R
	*	1760268569	0
	"	142	0
	^	142	0
	.	141	47
	+	141	47

> ~/project/rna-seq/build_kegg_names_offline.py
	*	1760266933	0
	"	232	0
	^	232	0
	.	231	10
	+	231	10

> ~/project/rna-seq/temp/extract_go_kegg.py
	*	1760262356	0
	"	20	2
	^	278	0
	.	277	10
	+	277	10

> ~/project/rna-seq/run_salmon_quant.sh
	*	1760241718	0
	"	1	0
	^	34	10
	.	34	9
	+	34	9

> ~/.condarc
	*	1760121642	0
	"	13	0
	^	13	0
	.	12	63
	+	1	9
	+	12	63

> ~/project/rna-seq/f_deg.R
	*	1760120130	0
	"	227	0
	^	227	0
	.	226	46
	+	226	46

> ~/project/rna-seq/bash
	*	1760120007	0
	"	63	0
	^	63	0
	.	62	41
	+	62	41

> ~/project/rna-seq/tximport_aggregate.R
	*	1760113872	0
	"	195	0
	^	195	0
	.	194	63
	+	1	22
	+	194	63

> ~/project/rna-seq/xxxx
	*	1760093964	0
	"	34	0
	^	34	0
	.	33	1
	+	33	1

> ~/project/rna-seq/run_fastp_auto.sh
	*	1760025002	0
	"	1	0

> ~/s_constricta/Snakefile
	*	1759815864	0
	"	6	0
	^	114	0
	.	125	61
	+	1	40
	+	125	61

> ~/s_constricta/config.yaml
	*	1759815800	0
	"	20	27
	^	20	28
	.	6	0
	+	20	27
	+	6	0

> ~/s_constricta/c
	*	1759815727	0
	"	1	0

> ~/project/scripts/run_cafe5.py
	*	1759758255	0
	"	338	0
	^	338	0
	.	337	10
	+	1	22
	+	1	21
	+	337	10

> ~/project/scripts/prep_cafe_input.py
	*	1759753974	0
	"	202	0
	^	202	0
	.	201	10
	+	1	22
	+	1	21
	+	201	10

> ~/project/scripts/relabel_ultra_tree_pretty.py
	*	1759750992	0
	"	75	0
	^	75	0
	.	74	10
	+	1	21
	+	74	10

> ~/project/scripts/make_ultrametric_tree.R
	*	1759750973	0
	"	51	0
	^	51	0
	.	50	41
	+	1	22
	+	1	82
	+	1	22
	+	50	41

> ~/project/scripts/sanitize_cafe_input.py
	*	1759749766	0
	"	80	0
	^	80	0
	.	79	86
	+	1	120
	+	1	21
	+	79	86

> ~/project/scripts/summarize_cafe_results.py
	*	1759743990	0
	"	99	0
	^	99	0
	.	98	10
	+	1	22
	+	1	21
	+	98	10

> ~/project/scripts/run_cafe5.sh
	*	1759729611	0
	"	128	0
	^	128	0
	.	127	29
	+	1	32
	+	1	19
	+	1	32
	+	1	39
	+	1	19
	+	127	29

> ~/project/run_cafe5.sh
	*	1759723367	0
	"	1	0

> ~/project/scripts/plot_species_family_bars.R
	*	1759718559	0
	"	79	0
	^	79	0
	.	78	61
	+	1	22
	+	78	61

> ~/project/scripts/plot_cafe_branch_changes.R
	*	1759718536	0
	"	69	0
	^	69	0
	.	68	62
	+	1	22
	+	68	62

> ~/project/scripts/plot_species_family_stack.R
	*	1759717961	0
	"	1	0

> ~/project/scripts/plot_species_family_branch.R
	*	1759717637	0
	"	43	0
	^	43	0
	.	42	55
	+	1	22
	+	42	55

> ~/project/envs/phylo.yml
	*	1759679120	0
	"	25	7
	^	25	8
	.	25	7
	+	25	7

> ~/project/scripts/filter_alignments_by_sco.py
	*	1759638478	0
	"	71	0
	^	71	0
	.	70	10
	+	70	10

> ~/project/scripts/build_sco_keep_list.py
	*	1759638461	0
	"	96	0
	^	96	0
	.	95	10
	+	95	10

> ~/project/scripts/relabel_gene_trees_to_species.py
	*	1759605857	0
	"	215	0
	^	215	0
	.	214	20
	+	1	22
	+	214	20

> ~/project/scripts/build_astral_map.py
	*	1759592148	0
	"	160	0
	^	160	0
	.	159	10
	+	1	22
	+	159	10

> ~/project/scripts/collapse_low_support_wrapper.py
	*	1759561651	0
	"	51	0
	^	51	0
	.	50	20
	+	50	20

> ~/project/scripts/extract_sco_list.py
	*	1759561596	0
	"	39	0
	^	39	0
	.	38	20
	+	38	20

> ~/project/scripts/prepare_trimmed_alignment.py
	*	1759561576	0
	"	74	0
	^	74	0
	.	73	20
	+	73	20

> ~/project/scripts/collect_gene_trees.py
	*	1759561504	0
	"	87	0
	^	87	0
	.	86	20
	+	86	20

> ~/project/scripts/collapse_headers_to_species.py
	*	1759561470	0
	"	57	0
	^	57	0
	.	56	20
	+	56	20

> ~/project/scripts/normalize_msas.py
	*	1759560808	0
	"	179	0
	^	179	0
	.	178	20
	+	1	22
	+	178	20

> ~/project/scripts/collapse_isoforms.py
	*	1759431394	0
	"	51	0
	^	51	0
	.	50	10
	+	50	10

> ~/project/config.yaml
	*	1759310680	0
	"	30	21
	^	30	22
	.	13	21
	+	1	29
	+	1	19
	+	1	51
	+	1	0
	+	1	20
	+	1	37
	+	1	17
	+	1	34
	+	1	26
	+	1	51
	+	1	42
	+	1	45
	+	1	14
	+	1	39
	+	1	8
	+	1	44
	+	1	0
	+	1	17
	+	1	33
	+	1	29
	+	1	27
	+	1	41
	+	1	37
	+	1	22
	+	1	51
	+	1	49
	+	1	47
	+	1	30
	+	74	77
	+	73	19
	+	54	17
	+	64	0
	+	24	25
	+	12	12
	+	13	21

> ~/project/scripts/kill_phylo.sh
	*	1759294819	0
	"	47	0
	^	47	0
	.	46	29
	+	1	100
	+	1	19
	+	46	29

> ~/Snakefile
	*	1759290556	0
	"	1	0

> ~/project/scripts/safe_run.sh
	*	1759083879	0
	"	10	0
	^	61	0
	.	60	10
	+	60	10

> ~/project/scripts/init_dirs.py
	*	1759080547	0
	"	35	0
	^	35	0
	.	34	10
	+	34	10

> ~/project/Snakefile
	*	1759079588	0
	"	56	0
	^	385	0
	.	384	57
	+	1	23
	+	384	57

> ~/project/scripts/collapse_low_support.py
	*	1759076870	0
	"	65	0
	^	65	0
	.	64	10
	+	64	10

> ~/project/root_and_plot.R
	*	1758877611	0
	"	99	0
	^	99	0
	.	98	45
	+	1	75
	+	98	45

> ~/project/config_augustus.yaml
	*	1758729549	0
	"	8	21

> ~/fna_pro/extract_LG_only.sh
	*	1758544423	0
	"	60	0
	^	60	0
	.	59	32
	+	59	32

> ~/fna_pro/resolve_dupes.py
	*	1758543552	0
	"	1	0
	^	79	0
	.	78	27
	+	78	27

> ~/fna_pro/id_map.tsv
	*	1758542810	0
	"	31	20

> ~/fna_pro/fix_and_extract.sh
	*	1758542359	0
	"	142	0
	^	142	0
	.	141	74
	+	8	0
	+	141	74

> /etc/vim/vimrc.local
	*	1758542306	0
	"	142	0
	.	143	0
	+	143	0

> /etc/vim/vimrc
	*	1758542256	0
	"	55	0

> /etc/vimrc
	*	1758541225	0
	"	1	0

> ~/.vimrc
	*	1758541193	0
	"	1	0

> ~/fna_pro/extract_protein_min.sh
	*	1758537861	0
	"	63	0
	^	63	0
	.	62	86
	+	1	19
	+	62	86

> ~/fna_pro/gff3_to_protein.sh
	*	1758534336	0
	"	47	0
	^	47	0
	.	61	70
	+	1	19
	+	61	70

> ~/project/coverage.tsv
	*	1757879052	0
	"	1	0

> ~/project/fix_and_resume.sh
	*	1757847258	0
	"	102	0
	^	102	0
	.	101	141
	+	1	19
	+	1	148
	+	1	19
	+	101	141

> ~/project/scripts/concat_supermatrix_safe.py
	*	1757842723	0
	"	174	0
	^	174	0
	.	173	10
	+	173	10

> ~/project/envs/phylo.lock.yml
	*	1757781366	0
	"	15	13

> ~/yeast_gwas_project/Snakefile
	*	1755771260	0
	"	40	0
	^	40	0
	.	35	57
	+	18	20
	+	18	55
	+	35	57

> ~/yeast_gwas_project/S
	*	1755771044	0
	"	1	0

> ~/s_constricta/01_reference/Sinonovacula_constricta.fixed.gff3
	*	1755768956	0
	"	600	27

> ~/s_constricta/01_reference/Sinonovacula_constricta.fna
	*	1755767718	0
	"	91	0

> ~/s_constricta/name_mapping.txt
	*	1755767566	0
	"	10	15
	^	19	16
	.	19	15
	+	19	15

> ~/s_constricta/create_mapping.py
	*	1755767138	0
	"	98	18
	^	98	19
	.	98	18
	+	98	18

> ~/s_constricta/fasta_names.txt
	*	1755766707	0
	"	269	13

> ~/s_constricta/gff_names.txt
	*	1755766545	0
	"	31	0

> ~/s_constricta/01_reference/Sinonovacula_constricta.gff3
	*	1755766441	0
	"	1495	0

> ~/s_constricta/database_build/Snakefile_db
	*	1755718167	0
	"	115	104
	^	115	105
	.	115	102
	+	115	102

> ~/temp.sh
	*	1755714162	0
	"	48	0
	^	82	116
	.	82	115
	+	1	24
	+	1	11
	+	82	115

> ~/s_constricta/database_build/config_db.yaml
	*	1755713725	0
	"	15	62
	^	15	63
	.	15	62
	+	36	26
	+	15	62

> ~/s_constricta/ref_index.sh
	*	1755706528	0
	"	21	39
	^	21	40
	.	21	39
	+	1	11
	+	21	39

> ~/run
	*	1755706247	0
	"	1	0
	^	10	56
	.	10	55
	+	10	55

> ~/temp
	*	1755696054	0
	"	1	0
